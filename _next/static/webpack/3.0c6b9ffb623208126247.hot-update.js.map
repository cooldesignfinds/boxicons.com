{"version":3,"file":"static/webpack/3.0c6b9ffb623208126247.hot-update.js","sources":["webpack:///./components/icons/iconsListItem.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport { BREAKPOINT_LG,DARK_FONT_COLOR, LIGHT_BACKGROUND,BREAKPOINT_MDS,BREAKPOINT_MDL,FLEX_MDL,FLEX_MDS,HEADER_COLOR,SELECTED_COLOR,ICON_BASE_LG,FONT_COLOR,FLEX,ICON_BASE,ICON_BASE_MD,FLEX_LG,FLEX_SM,FLEX_MD,ICON_SIZE,ICON_SIZE_MD,SECONDARY_FONT_COLOR,ICON_NAME_COLOR,DARK_BORDER_COLOR,FADE_FONT_COLOR, BREAKPOINT_MD, BREAKPOINT_SM} from '../types';\r\nimport { changeSideIcon, setSelectedIcon } from '../../actions/iconActions';\r\nconst IconBox = styled.div`\r\n\r\ntransition: background-color .4s, box-shadow 0.15s;\r\n    animation-fill-mode: forwards;\r\n            i {\r\n              color: ${props => props.dark ? DARK_FONT_COLOR : FONT_COLOR};\r\n           \r\n                font-size: ${ICON_SIZE};  \r\n                 @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                font-size: ${ICON_SIZE}; \r\n              }\r\n                @media screen and (max-width: ${BREAKPOINT_MD}) {\r\n                font-size: ${ICON_SIZE_MD}; \r\n              }\r\n              }\r\n              &.fade{\r\n                &.active{\r\n                  .icon-base {\r\n                opacity:1;\r\n              }\r\n                }\r\n                .icon-base {\r\n                opacity:0.5;\r\n              }\r\n              }\r\n              &.active{\r\n                i {\r\n                  color: ${props => props.dark ? '#FFF' : SELECTED_COLOR};\r\n  \r\n              }\r\n              }\r\n            cursor: pointer;\r\n            outline: none !important;\r\n            flex: 0 0 ${FLEX};\r\n\r\n            \r\n                        @media screen and (max-width: 1200px) {\r\n                flex: 0 0 10%;\r\n                max-width:${FLEX};\r\n            }\r\n            @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                flex: 0 0 ${FLEX_LG};\r\n                max-width: none;\r\n                height:90px;\r\n            }\r\n            \r\n             &:hover{\r\n                 z-index: 9999999;\r\n    }  \r\n    &:active {\r\n    box-shadow: 0 0px 0 5px rgba(176,108,74,0.2);\r\n}\r\n    border-radius: 2px;overflow: hidden;\r\n               overflow: hidden;\r\n              \r\n\r\n   \r\n            .icon-box-inner {\r\n            \r\n              margin: 2px;\r\n              border: 2px solid transparent;\r\n              font-weight: 700;\r\n              position: relative;\r\n              font-size: 16px;\r\n              border-radius: 5px;\r\n              line-height: 35px;\r\n              text-align: center;\r\n              pointer-events: none;\r\n              .icon-base{\r\n                height:${ICON_BASE};\r\n                margin:18px 0px;\r\n                @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                  margin:8px 0px;\r\n            }\r\n                i{\r\n                  line-height:${ICON_BASE};\r\n                }\r\n                @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                  height:${ICON_BASE_LG};\r\n                i{\r\n                  line-height:${ICON_BASE_LG};\r\n                }\r\n              }\r\n                @media screen and (max-width: ${BREAKPOINT_MD}) {\r\n                  height:${ICON_BASE_MD};\r\n                i{\r\n                  line-height:${ICON_BASE_MD};\r\n                }\r\n              }\r\n\r\n              }\r\n              .icon-box-name {\r\n                  font-size: 14px;\r\n                  -webkit-touch-callout: none;\r\n    -webkit-user-select: none; \r\n     -khtml-user-select: none; \r\n       -moz-user-select: none; \r\n        -ms-user-select: none; \r\n            user-select: none;\r\n                  font-weight: 400;\r\n                  color: ${ICON_NAME_COLOR};\r\n                  @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                display:none;\r\n              }\r\n                  margin: 0px 10px;\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n                  white-space: nowrap;\r\n                  line-height: 20px;    margin-top: 5px; margin-bottom: 16px;\r\n              }\r\n             @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n                width: auto;\r\n                padding: 15px 5px;\r\n              }\r\n              @media screen and (max-width: ${BREAKPOINT_MD}) {\r\n                padding: 10px 5px;\r\n              }\r\n\r\n            }\r\n&.active:hover{\r\n  box-shadow:none;\r\n}\r\n\r\n            &.active {\r\n              background: ${props => props.dark ? 'rgba(255,255,255,0.075)' : LIGHT_BACKGROUND};\r\n  \r\n                }\r\n        `;\r\nclass IconsListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleBoxClick = this.handleBoxClick.bind(this);\r\n        this.state = {\r\n            selectedIcon: {\r\n                name: null,\r\n                slug: null,\r\n                type_of_icon:null,\r\n            },\r\n            searchTerm: '',\r\n\r\n        };\r\n    }\r\n\r\n    handleBoxClick(name, slug, type_of_icon) {\r\n        this.props.changeSideIcon(true);\r\n        this.props.setSelectedIcon(name, slug, type_of_icon);\r\n\r\n    }\r\n    componentWillReceiveProps(newProps) {\r\n      \r\n        this.setState({\r\n            selectedIcon: newProps.selectedIcon\r\n        });\r\n        this.setState({\r\n            searchTerm: newProps.searchTerm\r\n        });\r\n       \r\n        \r\n\r\n    }\r\n    render() {\r\n        \r\n        var boxClass = classNames({\r\n            'active': (this.state.selectedIcon.slug === this.props.icon.slug),\r\n            'icon-box ':true,\r\n        });\r\n        return (\r\n            <IconBox dark={this.props.dark} className={boxClass} ref=\"iconbox\" tabIndex={this.props.num} onFocus={() => this.handleBoxClick(this.props.icon.name, this.props.icon.slug, this.props.icon.type_of_icon)}>\r\n  \r\n      <div className=\"icon-box-inner\" >\r\n      <div className=\"icon-base\" >\r\n      {this.props.icon.type_of_icon==='REGULAR' && <i className={\"fadeIn animated bx bx-\"+this.props.icon.name}></i>}\r\n      {this.props.icon.type_of_icon==='SOLID' && <i className={\"fadeIn animated bx bxs-\"+this.props.icon.name}></i>}\r\n {this.props.icon.type_of_icon==='LOGO' && <i className={\"fadeIn animated bx bxl-\"+this.props.icon.name}></i>}\r\n</div>\r\n\r\n<div className=\"icon-box-name\">{this.props.icon.name}</div>\r\n     </div></IconBox>\r\n        );\r\n    }\r\n}\r\n;\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedIcon: state.selectedIcon,\r\n        searchTerm: state.searchTerm,\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        changeSideIcon,\r\n        setSelectedIcon\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IconsListItem);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAsBA;AAAA;AAiGA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AAHA;AAYA;AACA;;;AACA;AACA;AACA;AAEA;;;AACA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAMA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnDA;AACA;AAoDA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}